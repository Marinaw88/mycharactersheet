[{"C:\\react\\mycharactersheet\\src\\App.js":"1","C:\\react\\mycharactersheet\\src\\reportWebVitals.js":"2","C:\\react\\mycharactersheet\\src\\index.js":"3"},{"size":3617,"mtime":1607995652458,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1606150475432,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606150475432,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1ck31o9",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mycharactersheet\\src\\App.js",["15","16"],"import './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Abilities extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      justNum: \"\",\n      calcNum: \"\"\n    };\n  }\ncalculating = (myEvent) => {\n  let value = myEvent.target.value;\n  let calculatedValue = (value-10)/2;\n  this.setState({\n    justNum: value,\n    calcNum: calculatedValue \n  })\n}\nrender (){\n  return(\n    <div>\n      <input\n      value={this.state.justnum}\n      onChange={this.calculating}\n      />\n    <h3>{this.props.name} Calculated: {this.state.calcNum}</h3>\n    </div>\n  );\n}\n}\n\nclass App extends React.Component {\n  render() {\n    let abilities = [\"Strength\", \"Brains\"];\n    let displayInfo = []\n    for (const num in abilities){\n      displayInfo.push(<Abilities name={abilities[num]}/>)\n    }\n    return (\n      <div>\n        <h1>Let's Calculate Your Abilities!</h1>\n        <h2>Enter Your Points to Convert Them</h2>\n        {displayInfo}\n      </div>\n    );\n  }\n}\n\n//   changeStrength = (myEvent) => {\n//     this.setState({\n//       strength: myEvent.target.value\n//     });\n//   }\n\n//   changeBrains = (myEvent) => {\n//     this.setState({\n//       brains: myEvent.target.value\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n         \n\n//           <div class='enterTrait'>\n//           <p>\n//             Character sheet - let's get started!\n//           </p>\n//             <p>Strength:</p>\n//             <input\n//               value={this.state.strength}\n//               onChange={this.stateStrength}\n//             />\n//             <p>Brains:</p>\n//             <input\n//               value={this.state.brains}\n//               onChange={this.changeBrains}\n//             />\n//           </div>\n//           <div class='displayInfo'>\n//             <div class='strengthInfo'>\n//               <p>Strength Information</p>\n//               <p class='dispStrength'> {this.state.strength}</p>\n//               <p class='strengthMod'>{(this.state.strength - 10 / 2)}</p>\n//             </div>\n//             <div class='brainsInfo'>\n//               <p>Brains Information</p>\n//               <p class='dispBrains'>{this.state.brains}</p>\n//               <p class='brainsMod'>{(this.state.brains - 10) / 2}</p>\n//             </div>\n//           </div>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n\n\n//THIS CODE BELOW IS FROM THE INTERNET. IT MAKES FUN ANIMATED BACKGROUND HAPPEN\n\nconst colors = [\"#3CC157\", \"#2AA7FF\", \"#1B1B1B\", \"#FCBC0F\", \"#F85F36\"];\n\nconst numBalls = 50;\nconst balls = [];\n\nfor (let i = 0; i < numBalls; i++) {\n  let ball = document.createElement(\"div\");\n  ball.classList.add(\"ball\");\n  ball.style.background = colors[Math.floor(Math.random() * colors.length)];\n  ball.style.left = `${Math.floor(Math.random() * 100)}vw`;\n  ball.style.top = `${Math.floor(Math.random() * 100)}vh`;\n  ball.style.transform = `scale(${Math.random()})`;\n  ball.style.width = `${Math.random()}em`;\n  ball.style.height = ball.style.width;\n  \n  balls.push(ball);\n  document.body.append(ball);\n}\n\n// Keyframes\nballs.forEach((el, i, ra) => {\n  let to = {\n    x: Math.random() * (i % 2 === 0 ? -11 : 11),\n    y: Math.random() * 12\n  };\n\n  let anim = el.animate(\n    [\n      { transform: \"translate(0, 0)\" },\n      { transform: `translate(${to.x}rem, ${to.y}rem)` }\n    ],\n    {\n      duration: (Math.random() + 1) * 2000, // random duration\n      direction: \"alternate\",\n      fill: \"both\",\n      iterations: Infinity,\n      easing: \"ease-in-out\"\n    }\n  );\n});\n\nexport default App;","C:\\react\\mycharactersheet\\src\\reportWebVitals.js",[],"C:\\react\\mycharactersheet\\src\\index.js",[],{"ruleId":"17","severity":1,"message":"18","line":3,"column":8,"nodeType":"19","messageId":"20","endLine":3,"endColumn":16},{"ruleId":"17","severity":1,"message":"21","line":133,"column":7,"nodeType":"19","messageId":"20","endLine":133,"endColumn":11},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'anim' is assigned a value but never used."]